---
title: "Pecos River USGS Gages"
author: "CLB"
format: html
editor: visual
---

```{r}
#| include: false
library(data.table)
library(tidyverse, warn.conflicts = F)
options(readr.show_col_types = F)
library(ggthemes)
library(here)
library(styler)
library(streamMetabolizer)
library(rstan)
options(mc.cores = parallel::detectCores())
library(dataRetrieval)
library(scales)
library(unitted)
library(knitr)
library(lubridate)
library(zoo)
library(nasapower)
library(imputeTS)
library(nhdplusTools)
library(sf)
library(nwmTools)
library(doParallel)
library(foreach)
```

# Find USGS Gages

```{r}
#search nldi for upstream gages
dsGage <- list(featureSource = "nwissite", featureID = "USGS-08447300")
usFlow <- navigate_nldi(dsGage, mode = "UT", distance_km = 2000)$UT_flowlines
usNwis <- navigate_nldi(dsGage, mode = "UT", data_source = "nwissite", distance_km = 2000)

plot(sf::st_geometry(usFlow), 
     lwd = 3, col = "blue")
plot(sf::st_geometry(usNwis$UT_nwissite), 
     cex = 1, lwd = 2, col = "red", add = TRUE)

#pull gage number from nwis
basinGages <- usNwis$UT_nwissite$identifier
#add starting site
basinGages <- append(basinGages, "USGS-08447300")
#remove usgs
basinGages <- gsub("USGS-", "", basinGages)

## get NWIS site data
basinGages <- whatNWISdata(siteNumber = basinGages, service = "uv") %>% 
  filter(!site_no == "08420500")
```

# Filter USGS Gages and Download Data

```{r}
pecosGages <- basinGages %>% 
  filter(parm_cd == "00300") %>% 
  mutate(station_nm = case_when(
    site_no == "08380500" ~ "Gallinas Creek Near Montezuma, NM",
    site_no == "08405400" ~ "Black River Near Malaga, NM",
    site_no == "08412500" ~ "Pecos River Near Orla, TX",
    site_no == "08419000" ~ "Pecos River Near Pecos, TX",
    #site_no == "08420500" ~ "Pecos River @ Pecos, TX",
    site_no == "08437710" ~ "Pecos River Near Grandfalls, TX",
    site_no == "08446500" ~ "Pecos River Near Girvin, TX",
    site_no == "08447000" ~ "Pecos River Near Sheffield, TX",
    site_no == "08447300" ~ "Pecos River Near Pandale, TX",
    site_no == "08447410" ~ "Pecos River Near Langtry, TX"))

#Download sensor data for each site
datList <- list()

for (i in 1:nrow(pecosGages)) {
  cat(paste("Downloading USGS data for", pecosGages$station_nm[i],"\n"))
  parameterCd <- c("00060", "00300", "00010") 
  tempDat <- readNWISuv(pecosGages$site_no[i], parameterCd, pecosGages$begin_date[i], pecosGages$end_date[i], tz = "UTC")
  setDT(tempDat)
  #Raname cols to make sense
  tempDat <- renameNWISColumns(tempDat)
  #Convert CFS to CMS
  tempDat$Flow_Inst <- (tempDat$Flow_Inst * 0.028316847)
  #Make nice timestamps
  tempDat <- tempDat[!(is.na(tempDat$DO_Inst)), ]
  minDate <- min(tempDat$dateTime)
  maxDate <- max(tempDat$dateTime)
  
  #Date and time sequence running every 15 minutes
  date_seq <- seq(as.POSIXct(minDate, tz = "UTC"),
                  as.POSIXct(maxDate, tz = "UTC"),
                  by = ("15 min"))
  # simply a data frame of date and time running the course of the data set
  min.fill <- data.frame(dateTime = date_seq)
  tempDat <- merge(min.fill, tempDat, all.x = T)
  #Fill gaps
  tempDat$DO_Inst <- na.approx(tempDat$DO_Inst, maxgap = 24, na.rm = F)
  tempDat$Flow_Inst <- na.approx(tempDat$Flow_Inst, maxgap = 24, na.rm = F)
  #fill new rows with info
  tempDat$agency_cd <- "USGS"
  tempDat$site_no <- pecosGages$site_no[i]
  tempDat$station_nm <- pecosGages$station_nm[i]
  tempDat$tz_cd <- "UTC"
  #Save to df
  datList[[i]] <- tempDat
  datList <- datList[lengths(datList) != 0]
  cat(paste("Finished downloading USGS data for", pecosGages$station_nm[i],"\n"))
}

pecosDat <- do.call(rbind, datList)
```

```{r}
no_cores <- detectCores() - 1  # Leaves one core free for other tasks
registerDoParallel(no_cores)

pecosDat <-
  foreach(i = 1:nrow(pecosGages), .combine = 'rbind', .packages = c("data.table", "dataRetrieval", "zoo")) %dopar% {
  parameterCd <- c("00060", "00300", "00010") 
  tempDat <- readNWISuv(pecosGages$site_no[i], parameterCd, pecosGages$begin_date[i], pecosGages$end_date[i], tz = "UTC")
  setDT(tempDat)
  #Raname cols to make sense
  tempDat <- renameNWISColumns(tempDat)
  #Convert CFS to CMS
  tempDat$Flow_Inst <- (tempDat$Flow_Inst * 0.028316847)
  #Make nice timestamps
  tempDat <- tempDat[!(is.na(tempDat$DO_Inst)), ]
  minDate <- min(tempDat$dateTime)
  maxDate <- max(tempDat$dateTime)
  
  #Date and time sequence running every 15 minutes
  date_seq <- seq(as.POSIXct(minDate, tz = "UTC"),
                  as.POSIXct(maxDate, tz = "UTC"),
                  by = ("15 min"))
  # simply a data frame of date and time running the course of the data set
  min.fill <- data.frame(dateTime = date_seq)
  tempDat <- merge(min.fill, tempDat, all.x = T)
  #Fill gaps
  tempDat$DO_Inst <- na.approx(tempDat$DO_Inst, maxgap = 24, na.rm = F)
  tempDat$Flow_Inst <- na.approx(tempDat$Flow_Inst, maxgap = 24, na.rm = F)
  #fill new rows with info
  tempDat$agency_cd <- "USGS"
  tempDat$site_no <- pecosGages$site_no[i]
  tempDat$station_nm <- pecosGages$station_nm[i]
  tempDat$tz_cd <- "UTC"
  #Save to df
  tempDat
}

stopImplicitCluster()
```

# Look at it!

```{r}
pecosDat <- pecosDat %>% 
  mutate(station_nm = factor(station_nm, levels = c(
    "Gallinas Creek Near Montezuma, NM",
    "Black River Near Malaga, NM",
    "Pecos River Near Orla, TX",
    "Pecos River Near Pecos, TX",
    "Pecos River @ Pecos, TX",  
    "Pecos River Near Grandfalls, TX",
    "Pecos River Near Girvin, TX",
    "Pecos River Near Sheffield, TX",
    "Pecos River Near Pandale, TX",
    "Pecos River Near Langtry, TX"), ordered = T))


pecosDat %>%
  ggplot(aes(dateTime, DO_Inst)) +
  geom_line() +
  labs(x = element_blank(),
       y = "Dissolved Oxygen (mg/L)") +
  theme_base() +
  theme(axis.text.x = element_text(
    angle = 45,
    vjust = 1,
    hjust = 1
  )) +
  scale_x_datetime(labels = date_format("%Y"),
                   breaks = date_breaks("2 year"))+
  facet_wrap(~station_nm, ncol = 2, scales = "free_y") -> doFig

pecosDat %>%
  ggplot(aes(dateTime, Flow_Inst)) +
  geom_line() +
  labs(x = element_blank(),
       y = expression(Discharge~("m"^3*"s"^{-1}))) +
  theme_base() +
  theme(axis.text.x = element_text(
    angle = 45,
    vjust = 1,
    hjust = 1
  )) +
  scale_x_datetime(labels = date_format("%Y"),
                   breaks = date_breaks("2 year"))+
  scale_y_continuous(labels = scales::number_format(accuracy = 0.1))+
  facet_wrap(~station_nm, ncol = 2, scales = "free_y") -> qFig

doFig
qFig
ggsave("DOfig.png", doFig, here("Figs/"), device = "png", width = 21, height = 15, units = "cm", dpi = "retina")
ggsave("Qfig.png", qFig, here("Figs/"), device = "png", width = 21, height = 15, units = "cm", dpi = "retina")
```

```{r}
pecosDat %>% 
ggplot(aes(dateTime, Flow_Inst))+
  geom_line() +
  labs(y = expression(Discharge~("m"^3*"s"^{-1})))+
  theme_clean()+
  scale_x_datetime()+
  scale_y_continuous(labels = scales::number_format(accuracy = 0.1))+
  theme(axis.title.x = element_blank(),
        legend.position = "none",
        axis.text.x = element_text(angle = 45, vjust = 1, hjust=1))+
  facet_wrap(~Site, ncol=3, scales= "free")
```
